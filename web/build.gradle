plugins {
    id "com.moowork.node" version "1.2.0"
    id "com.github.hierynomus.license" version"0.14.0"
}

node {
    version = '8.5.0'
    nodeModulesDir = projectDir
    download = true
}

license {
    header file("${rootDir}/LICENSE_HEADER")
    mapping {
        ts='JAVADOC_STYLE'
        proto='DOUBLESLASH_STYLE'
        interop='DOUBLESLASH_STYLE'
    }
    strictCheck true
}

task licenseFormatTS(type: com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = fileTree(dir: ".").exclude("**/node_modules/*")
            .include("**/*.ts").include("**/*.proto").include("**/*.interop")
}

tasks["license"].dependsOn licenseFormatTS
licenseFormat.dependsOn licenseFormatTS

task npmGenNpmrc(type: NpmTask) {
    args = System.env['NPM_AUTH_USER'] != null ? ['run', 'gen-root-npmrc'] : ['-v'];    
}

task npmRunInstall(type: NpmTask, dependsOn: ['npmGenNpmrc']) {
    args = ['install'];
}

task npmBuild(type: NpmTask, dependsOn: ['npmRunInstall']) {
    args = System.env['BuildRunner'] != null ? 
        System.env['NPM_PUBLISH'] == "true" ? ['run', 'ci-publish'] : (System.env['NPM_AUTH_USER'] != null ?  ['run', 'ci-build'] : ['run', 'build'])
            : org.gradle.internal.os.OperatingSystem.current().isWindows() ? ['run', 'build-win'] : ['run', 'build']
}

task buildTransport(dependsOn: npmBuild) {
    outputs.dir('.')
}

task build(dependsOn: buildTransport) {
}
build.dependsOn('license')
