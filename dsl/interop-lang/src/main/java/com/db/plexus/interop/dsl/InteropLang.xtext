/**
 * Copyright 2017 Plexus Interop Deutsche Bank AG
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
grammar com.db.plexus.interop.dsl.InteropLang with com.db.plexus.interop.dsl.protobuf.ProtoLang 

import "http://www.db.com/plexus/interop/dsl/protobuf"
import "http://www.db.com/plexus/interop/dsl"

@Override
Proto: {Proto}
	elements+=ProtoElement*
;

@Override
ProtoElement:
	(Package | Import | Option | ProtoDefinition)
;

@Override 
ProtoDefinition:
	Application
;

Application:
	'application' name=VALID_INTEROP_ID '{'
		(elements+=ApplicationElement)*
	'}' ';'*
;

ApplicationElement:
	ConsumedService	| ProvidedService | InteropOption
;

InteropOption:
	'option' name=OPTION_NAME '=' value=OptionValue ';'+
;

ConsumedService:
	'consumes' service=[Service|FULL_ID] ('as' alias=VALID_INTEROP_ID)? ('from' restrictions=RestrictionList)? body=ConsumedServiceBody ';'*
;

RestrictionList:
	elements+=WildcardRestriction (',' elements+=WildcardRestriction)*
;

WildcardRestriction:
	wildcard=WILDCARD
;

ConsumedServiceBody: {ConsumedServiceBody}
	'{'
		(elements+=ConsumedServiceElement)*
	'}'
;

ConsumedServiceElement:
	ConsumedMethod | InteropOption
;

ConsumedMethod:
	method=[Method|VALID_INTEROP_ID] (options=OptionList)? ';'+
;

ProvidedService:
	'provides' service=[Service|FULL_ID] ('as' alias=VALID_INTEROP_ID)? ('to' restrictions=RestrictionList)? body=ProvidedServiceBody
;

ProvidedServiceBody: {ProvidedServiceBody}
	'{'
		(elements+=ProvidedServiceElement)*
	'}'
;

ProvidedServiceElement:
	ProvidedMethod | InteropOption
;

ProvidedMethod:
	method=[Method|VALID_INTEROP_ID] (options=OptionList)? ';'+
;

INTEROP_KEYWORD:
	'application' | 'consumes' | 'provides'
;
 
VALID_INTEROP_ID:
	 INTEROP_KEYWORD | VALID_ID	 
;

WILDCARD:
	'*' | (FULL_ID ('*'|'.*')?)
;