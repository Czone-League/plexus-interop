// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fx/CcyPairRateService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Plexus.Interop.Samples.CcyPairRateProvider.Generated {

  /// <summary>Holder for reflection information generated from fx/CcyPairRateService.proto</summary>
  public static partial class CcyPairRateServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for fx/CcyPairRateService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CcyPairRateServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtmeC9DY3lQYWlyUmF0ZVNlcnZpY2UucHJvdG8SAmZ4GhVpbnRlcm9wL09w",
            "dGlvbnMucHJvdG8iLgoHQ2N5UGFpchITCgtjY3lQYWlyTmFtZRgBIAEoCToO",
            "ktsECmZ4LkNjeVBhaXIiRAoLQ2N5UGFpclJhdGUSEwoLY2N5UGFpck5hbWUY",
            "ASABKAkSDAoEcmF0ZRgCIAEoAToSktsEDmZ4LkNjeVBhaXJSYXRlMlgKEkNj",
            "eVBhaXJSYXRlU2VydmljZRInCgdHZXRSYXRlEgsuZnguQ2N5UGFpchoPLmZ4",
            "LkNjeVBhaXJSYXRlGhma2wQVZnguQ2N5UGFpclJhdGVTZXJ2aWNlQjeqAjRQ",
            "bGV4dXMuSW50ZXJvcC5TYW1wbGVzLkNjeVBhaXJSYXRlUHJvdmlkZXIuR2Vu",
            "ZXJhdGVkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.OptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPair), global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPair.Parser, new[]{ "CcyPairName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPairRate), global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPairRate.Parser, new[]{ "CcyPairName", "Rate" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CcyPair : pb::IMessage<CcyPair> {
    private static readonly pb::MessageParser<CcyPair> _parser = new pb::MessageParser<CcyPair>(() => new CcyPair());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CcyPair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPairRateServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPair(CcyPair other) : this() {
      ccyPairName_ = other.ccyPairName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPair Clone() {
      return new CcyPair(this);
    }

    /// <summary>Field number for the "ccyPairName" field.</summary>
    public const int CcyPairNameFieldNumber = 1;
    private string ccyPairName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CcyPairName {
      get { return ccyPairName_; }
      set {
        ccyPairName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CcyPair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CcyPair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CcyPairName != other.CcyPairName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CcyPairName.Length != 0) hash ^= CcyPairName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CcyPairName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CcyPairName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CcyPairName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CcyPairName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CcyPair other) {
      if (other == null) {
        return;
      }
      if (other.CcyPairName.Length != 0) {
        CcyPairName = other.CcyPairName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CcyPairName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CcyPairRate : pb::IMessage<CcyPairRate> {
    private static readonly pb::MessageParser<CcyPairRate> _parser = new pb::MessageParser<CcyPairRate>(() => new CcyPairRate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CcyPairRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Plexus.Interop.Samples.CcyPairRateProvider.Generated.CcyPairRateServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPairRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPairRate(CcyPairRate other) : this() {
      ccyPairName_ = other.ccyPairName_;
      rate_ = other.rate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CcyPairRate Clone() {
      return new CcyPairRate(this);
    }

    /// <summary>Field number for the "ccyPairName" field.</summary>
    public const int CcyPairNameFieldNumber = 1;
    private string ccyPairName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CcyPairName {
      get { return ccyPairName_; }
      set {
        ccyPairName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private double rate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CcyPairRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CcyPairRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CcyPairName != other.CcyPairName) return false;
      if (Rate != other.Rate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CcyPairName.Length != 0) hash ^= CcyPairName.GetHashCode();
      if (Rate != 0D) hash ^= Rate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CcyPairName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CcyPairName);
      }
      if (Rate != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Rate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CcyPairName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CcyPairName);
      }
      if (Rate != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CcyPairRate other) {
      if (other == null) {
        return;
      }
      if (other.CcyPairName.Length != 0) {
        CcyPairName = other.CcyPairName;
      }
      if (other.Rate != 0D) {
        Rate = other.Rate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CcyPairName = input.ReadString();
            break;
          }
          case 17: {
            Rate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
